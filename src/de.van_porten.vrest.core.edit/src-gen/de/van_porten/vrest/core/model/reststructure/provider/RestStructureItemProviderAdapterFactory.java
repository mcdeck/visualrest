/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package de.van_porten.vrest.core.model.reststructure.provider;

import de.van_porten.vrest.core.model.reststructure.util.RestStructureAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class RestStructureItemProviderAdapterFactory extends RestStructureAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RestStructureItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.Attribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeItemProvider attributeItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.Attribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeAdapter() {
		if (attributeItemProvider == null) {
			attributeItemProvider = new AttributeItemProvider(this);
		}

		return attributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.LinkCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinkCollectionItemProvider linkCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.LinkCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinkCollectionAdapter() {
		if (linkCollectionItemProvider == null) {
			linkCollectionItemProvider = new LinkCollectionItemProvider(this);
		}

		return linkCollectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.Parameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterItemProvider parameterItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.Parameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterAdapter() {
		if (parameterItemProvider == null) {
			parameterItemProvider = new ParameterItemProvider(this);
		}

		return parameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.Method} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MethodItemProvider methodItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.Method}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMethodAdapter() {
		if (methodItemProvider == null) {
			methodItemProvider = new MethodItemProvider(this);
		}

		return methodItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.MediaType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MediaTypeItemProvider mediaTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.MediaType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMediaTypeAdapter() {
		if (mediaTypeItemProvider == null) {
			mediaTypeItemProvider = new MediaTypeItemProvider(this);
		}

		return mediaTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.Representation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RepresentationItemProvider representationItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.Representation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRepresentationAdapter() {
		if (representationItemProvider == null) {
			representationItemProvider = new RepresentationItemProvider(this);
		}

		return representationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.RepresentationElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RepresentationElementItemProvider representationElementItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.RepresentationElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRepresentationElementAdapter() {
		if (representationElementItemProvider == null) {
			representationElementItemProvider = new RepresentationElementItemProvider(this);
		}

		return representationElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.MethodType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MethodTypeItemProvider methodTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.MethodType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMethodTypeAdapter() {
		if (methodTypeItemProvider == null) {
			methodTypeItemProvider = new MethodTypeItemProvider(this);
		}

		return methodTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.RelationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationTypeItemProvider relationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.RelationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationTypeAdapter() {
		if (relationTypeItemProvider == null) {
			relationTypeItemProvider = new RelationTypeItemProvider(this);
		}

		return relationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.InternalLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InternalLinkItemProvider internalLinkItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.InternalLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInternalLinkAdapter() {
		if (internalLinkItemProvider == null) {
			internalLinkItemProvider = new InternalLinkItemProvider(this);
		}

		return internalLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.ExternalLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalLinkItemProvider externalLinkItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.ExternalLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalLinkAdapter() {
		if (externalLinkItemProvider == null) {
			externalLinkItemProvider = new ExternalLinkItemProvider(this);
		}

		return externalLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.ExternalLinkCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalLinkCollectionItemProvider externalLinkCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.ExternalLinkCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalLinkCollectionAdapter() {
		if (externalLinkCollectionItemProvider == null) {
			externalLinkCollectionItemProvider = new ExternalLinkCollectionItemProvider(this);
		}

		return externalLinkCollectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.InternalLinkCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InternalLinkCollectionItemProvider internalLinkCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.InternalLinkCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInternalLinkCollectionAdapter() {
		if (internalLinkCollectionItemProvider == null) {
			internalLinkCollectionItemProvider = new InternalLinkCollectionItemProvider(this);
		}

		return internalLinkCollectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.PrimitiveDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimitiveDataTypeItemProvider primitiveDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.PrimitiveDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimitiveDataTypeAdapter() {
		if (primitiveDataTypeItemProvider == null) {
			primitiveDataTypeItemProvider = new PrimitiveDataTypeItemProvider(this);
		}

		return primitiveDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.CollectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollectionTypeItemProvider collectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.CollectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollectionTypeAdapter() {
		if (collectionTypeItemProvider == null) {
			collectionTypeItemProvider = new CollectionTypeItemProvider(this);
		}

		return collectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.SimpleIdentifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpleIdentifierItemProvider simpleIdentifierItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.SimpleIdentifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimpleIdentifierAdapter() {
		if (simpleIdentifierItemProvider == null) {
			simpleIdentifierItemProvider = new SimpleIdentifierItemProvider(this);
		}

		return simpleIdentifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.ComplexIdentifierPattern} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComplexIdentifierPatternItemProvider complexIdentifierPatternItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.ComplexIdentifierPattern}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComplexIdentifierPatternAdapter() {
		if (complexIdentifierPatternItemProvider == null) {
			complexIdentifierPatternItemProvider = new ComplexIdentifierPatternItemProvider(this);
		}

		return complexIdentifierPatternItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.MediaTypeElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MediaTypeElementItemProvider mediaTypeElementItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.MediaTypeElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMediaTypeElementAdapter() {
		if (mediaTypeElementItemProvider == null) {
			mediaTypeElementItemProvider = new MediaTypeElementItemProvider(this);
		}

		return mediaTypeElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.SubresourceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubresourceTypeItemProvider subresourceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.SubresourceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubresourceTypeAdapter() {
		if (subresourceTypeItemProvider == null) {
			subresourceTypeItemProvider = new SubresourceTypeItemProvider(this);
		}

		return subresourceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.AggregationResourceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AggregationResourceTypeItemProvider aggregationResourceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.AggregationResourceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAggregationResourceTypeAdapter() {
		if (aggregationResourceTypeItemProvider == null) {
			aggregationResourceTypeItemProvider = new AggregationResourceTypeItemProvider(this);
		}

		return aggregationResourceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.PrimaryResourceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimaryResourceTypeItemProvider primaryResourceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.PrimaryResourceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimaryResourceTypeAdapter() {
		if (primaryResourceTypeItemProvider == null) {
			primaryResourceTypeItemProvider = new PrimaryResourceTypeItemProvider(this);
		}

		return primaryResourceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.ActivityResourceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActivityResourceTypeItemProvider activityResourceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.ActivityResourceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActivityResourceTypeAdapter() {
		if (activityResourceTypeItemProvider == null) {
			activityResourceTypeItemProvider = new ActivityResourceTypeItemProvider(this);
		}

		return activityResourceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.PagingResourceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PagingResourceTypeItemProvider pagingResourceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.PagingResourceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPagingResourceTypeAdapter() {
		if (pagingResourceTypeItemProvider == null) {
			pagingResourceTypeItemProvider = new PagingResourceTypeItemProvider(this);
		}

		return pagingResourceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.ProjectionResourceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProjectionResourceTypeItemProvider projectionResourceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.ProjectionResourceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProjectionResourceTypeAdapter() {
		if (projectionResourceTypeItemProvider == null) {
			projectionResourceTypeItemProvider = new ProjectionResourceTypeItemProvider(this);
		}

		return projectionResourceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.ListResourceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ListResourceTypeItemProvider listResourceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.ListResourceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createListResourceTypeAdapter() {
		if (listResourceTypeItemProvider == null) {
			listResourceTypeItemProvider = new ListResourceTypeItemProvider(this);
		}

		return listResourceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.FilterResourceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilterResourceTypeItemProvider filterResourceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.FilterResourceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilterResourceTypeAdapter() {
		if (filterResourceTypeItemProvider == null) {
			filterResourceTypeItemProvider = new FilterResourceTypeItemProvider(this);
		}

		return filterResourceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.MediaTypeLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MediaTypeLinkItemProvider mediaTypeLinkItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.MediaTypeLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMediaTypeLinkAdapter() {
		if (mediaTypeLinkItemProvider == null) {
			mediaTypeLinkItemProvider = new MediaTypeLinkItemProvider(this);
		}

		return mediaTypeLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.MediaTypeLinkCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MediaTypeLinkCollectionItemProvider mediaTypeLinkCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.MediaTypeLinkCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMediaTypeLinkCollectionAdapter() {
		if (mediaTypeLinkCollectionItemProvider == null) {
			mediaTypeLinkCollectionItemProvider = new MediaTypeLinkCollectionItemProvider(this);
		}

		return mediaTypeLinkCollectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.RepresentationLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RepresentationLinkItemProvider representationLinkItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.RepresentationLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRepresentationLinkAdapter() {
		if (representationLinkItemProvider == null) {
			representationLinkItemProvider = new RepresentationLinkItemProvider(this);
		}

		return representationLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.van_porten.vrest.core.model.reststructure.RepresentationLinkCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RepresentationLinkCollectionItemProvider representationLinkCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link de.van_porten.vrest.core.model.reststructure.RepresentationLinkCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRepresentationLinkCollectionAdapter() {
		if (representationLinkCollectionItemProvider == null) {
			representationLinkCollectionItemProvider = new RepresentationLinkCollectionItemProvider(this);
		}

		return representationLinkCollectionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (attributeItemProvider != null) attributeItemProvider.dispose();
		if (linkCollectionItemProvider != null) linkCollectionItemProvider.dispose();
		if (parameterItemProvider != null) parameterItemProvider.dispose();
		if (methodItemProvider != null) methodItemProvider.dispose();
		if (mediaTypeItemProvider != null) mediaTypeItemProvider.dispose();
		if (representationItemProvider != null) representationItemProvider.dispose();
		if (representationElementItemProvider != null) representationElementItemProvider.dispose();
		if (methodTypeItemProvider != null) methodTypeItemProvider.dispose();
		if (relationTypeItemProvider != null) relationTypeItemProvider.dispose();
		if (internalLinkItemProvider != null) internalLinkItemProvider.dispose();
		if (externalLinkItemProvider != null) externalLinkItemProvider.dispose();
		if (externalLinkCollectionItemProvider != null) externalLinkCollectionItemProvider.dispose();
		if (internalLinkCollectionItemProvider != null) internalLinkCollectionItemProvider.dispose();
		if (primitiveDataTypeItemProvider != null) primitiveDataTypeItemProvider.dispose();
		if (collectionTypeItemProvider != null) collectionTypeItemProvider.dispose();
		if (simpleIdentifierItemProvider != null) simpleIdentifierItemProvider.dispose();
		if (complexIdentifierPatternItemProvider != null) complexIdentifierPatternItemProvider.dispose();
		if (mediaTypeElementItemProvider != null) mediaTypeElementItemProvider.dispose();
		if (subresourceTypeItemProvider != null) subresourceTypeItemProvider.dispose();
		if (aggregationResourceTypeItemProvider != null) aggregationResourceTypeItemProvider.dispose();
		if (primaryResourceTypeItemProvider != null) primaryResourceTypeItemProvider.dispose();
		if (activityResourceTypeItemProvider != null) activityResourceTypeItemProvider.dispose();
		if (pagingResourceTypeItemProvider != null) pagingResourceTypeItemProvider.dispose();
		if (projectionResourceTypeItemProvider != null) projectionResourceTypeItemProvider.dispose();
		if (listResourceTypeItemProvider != null) listResourceTypeItemProvider.dispose();
		if (filterResourceTypeItemProvider != null) filterResourceTypeItemProvider.dispose();
		if (mediaTypeLinkItemProvider != null) mediaTypeLinkItemProvider.dispose();
		if (mediaTypeLinkCollectionItemProvider != null) mediaTypeLinkCollectionItemProvider.dispose();
		if (representationLinkItemProvider != null) representationLinkItemProvider.dispose();
		if (representationLinkCollectionItemProvider != null) representationLinkCollectionItemProvider.dispose();
	}

}
